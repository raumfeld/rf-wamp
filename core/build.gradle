plugins {
    id 'kotlin-multiplatform' 
    id 'kotlinx-serialization' 
    id 'com.android.library'
    id 'com.github.dcendents.android-maven'
}

repositories {
    google()
    jcenter()
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

group 'com.github.raumfeld'
version '0.0.1'

android {
    compileSdkVersion 28
    buildToolsVersion("28.0.3")

    sourceSets {
        main {
            setRoot("src/androidMain")
        }

        test {
            setRoot("src/AndroidTest")
        }
    }
}

kotlin {
    android {
        publishAllLibraryVariants()
    }
    // this fails with "A POM cannot have multiple artifacts with the same type and classifier"
//    jvm()

    iosX64("ios") {
        binaries {
            framework('RfWamp')
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$kotlin_serialization_runtime_version"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$kotlin_coroutines_version"
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
                implementation "io.mockk:mockk-common:$mockk_version"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$kotlin_coroutines_version"
            }
        }
        androidMain {
            dependsOn commonMain
            dependencies {
                implementation kotlin('stdlib')
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
            }
        }
        jvmMain {
            dependsOn commonMain
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
            }
        }
        androidTest {
            dependsOn commonTest
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
                implementation "io.mockk:mockk:$mockk_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$kotlin_serialization_runtime_version"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
                implementation project(":extensions-android-okhttp")
            }
        }
        iosMain {
            dependsOn commonMain
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-native:$kotlin_coroutines_version"
            }
        }
        iosTest {
            dependsOn commonTest
            dependencies {
                implementation kotlin('test')
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-native:$kotlin_coroutines_version"
            }
        }
    }

    // This should work, but it does not. *screams at the Gradle gods*
    targets.all {
        compilations.all {
            kotlinOptions {
                freeCompilerArgs = [
                        '-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi',
                        '-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi',
                        '-Xallow-result-return-type']
            }
        }
    }
}

afterEvaluate {
    tasks.install {
        dependsOn tasks.getByName("testDebugUnitTest")
    }
}